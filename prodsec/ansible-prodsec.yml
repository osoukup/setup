# RH PS work setup playbook
#
#   ansible-prodsec.yml
---
- name: prodsec setup
  hosts: all
  tasks:
    - name: check mandatory variables are defined
      assert:
        that:
          - user is defined

    - name: create ~/prodsec
      file:
        path: "/home/{{ user }}/prodsec"
        state: directory
      become_user: "{{ user }}"
    - name: create ~/prodsec-people
      file:
        path: "/home/{{ user }}/prodsec-people"
        state: directory
      become_user: "{{ user }}"

    - name: setup prodsec aliases
      blockinfile:
        path: "/home/{{ user }}/.bashrc"
        marker: "# {mark} prodsec ANSIBLE MANAGED BLOCK"
        block: |
          # sfm2 config file
          export SFM2_SERVER_CONFIG=~/sfm2/instance/development.ini
          # DevOps tools shortcuts
          alias asm-source="source ~/prodsec/assembler/venv/bin/activate"
          alias retrocat-source="source ~/prodsec/retrocat/venv/bin/activate"
          alias sfm2-db="sqlitebrowser ~/sfm2/instance/sfm2-database.sqlite"
          alias sfm2-db-clear="rm ~/sfm2/instance/sfm2-database.sqlite"
          alias sfm2-shell="(sfm2-source && python ~/sfm2/sfm2/shell.py)"
          alias sfm2-source="source ~/sfm2/venv/bin/activate ; source ~/sfm2/cli/sfm2-completion.bash"
          alias sfm2-activate="~/data/tools/sfm2-activate.sh"
          alias sfm2-deactivate="~/data/tools/sfm2-deactivate.sh"
          alias sfm2-instance-switch="~/data/tools/instance-switch.sh"
          alias sfm2-server="(sfm2-source && sfm-server --log-level=debug)"
          alias sfm2-taskd="(sfm2-source && sfm-taskd --debug)"
          alias sfm2-log-server="(less +F ~/sfm2/instance/logs/sfm2-server.log)"
          alias sfm2-log-taskd="(less +F ~/sfm2/instance/logs/sfm2-taskd.log)"
          alias sfm2-log-gunicorn="(less +F ~/sfm2/instance/logs/gunicorn-error.log)"
          alias vdb="psql -h virtualdb.engineering.redhat.com -p 5432 -U srt -d srt"

    # setup VPN - partially
    - name: install NetworkManager-openvpn
      dnf:
        name: NetworkManager-openvpn
        state: present
    - name: install NetworkManager-openvpn-gnome
      dnf:
        name: NetworkManager-openvpn-gnome
        state: present
    # TODO install the RPMs from the following URLs manually
    # https://redhat.service-now.com/help?id=kb_article_view&sysparm_article=KB0005424&sys_kb_id=02a0fcb41bc9d4104cec766dcc4bcb29

    # setup Kerberos
    - name: install krb5-workstation
      dnf:
        name: krb5-workstation
        state: present
    - name: setup Kerberos config
      copy:
        src: "/home/{{ user }}/data/config/krb5.conf"
        dest: "/etc/krb5.conf"
        mode: "0644"

    - name: install git
      dnf:
        name: git
        state: present

    - name: setup prodsec repositories
      block:
        # TODO key authentication does not work
        - name: clone repo to dir
          git:
            repo: "git@git.prodsec.redhat.com:{{ item.dir }}/{{ item.rep }}.git"
            dest: "/home/{{ user }}/prodsec/{{ item.rep }}"
            accept_hostkey: yes
            key_file: "/home/{{ user }}/.ssh/id_rsa"
          become_user: "{{ user }}"
          loop:
            - rep: "assembler"
              dir: "devops"
            - rep: "checklists"
              dir: "prodsec"
            - rep: "dashboard"
              dir: "devops"
            - rep: "product-definitions"
              dir: "prodsec"
            - rep: "ps-constants"
              dir: "devops"
            - rep: "public-slide-decks"
              dir: "prodsec"
            - rep: "retrocat"
              dir: "devops"
            - rep: "sfm2"
              dir: "devops"
            - rep: "xenuti-internal"
              dir: "devops"
        - name: setup ~/sfm2 symlink
          file:
            src: "/home/{{ user }}/prodsec/sfm2"
            dest: "/home/{{ user }}/sfm2"
            state: link
            force: true
          become_user: "{{ user }}"
        - name: get new .sfm2clientrc stats
          stat:
            path: "/home/{{ user }}/data/config/dot-sfm2clientrc"
          register: new_sfm2clientrc
        - name: setup .sfm2clientrc
          file:
            src: "/home/{{ user }}/data/config/dot-sfm2clientrc"
            dest: "/home/{{ user }}/.sfm2clientrc"
            state: link
            force: true
          become_user: "{{ user }}"
          when: new_sfm2clientrc.stat.exists == true
      rescue:
        - name: report failure
          debug:
            msg: "prodsec repo failure - check VPN connection"

    - name: install development stuff
      dnf:
        name:
          - glibc-devel
          - libcap-devel
          - postgresql-devel
          - krb5-devel
          - black
          - tox
          - gitk
          - sqlitebrowser
          - rpmdevtools
        state: present
    - name: install stuff from prodsec repo
      block:
        - name: install prodsec repo
          dnf:
            name: https://prodsec.redhat.com/yum/prodsec-repo-latest.all.noarch.rpm
            state: present
            disable_gpg_check: true
        - name: install rh-signing-tools-lite
          dnf:
            name: rh-signing-tools-lite
            state: present
      rescue:
        - name: report failure
          debug:
            msg: "prodsec repo failure - check VPN connection"

- name: hexchat setup
  import_playbook: ansible-hexchat.yml

- name: sfm2 setup
  import_playbook: ansible-sfm2.yml

- name: assembler setup
  import_playbook: ansible-assembler.yml
