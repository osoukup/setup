# RH PS SFM2 setup playbook
#
#   full installation depends on ansible-prodsec.yml
#   ansible-sfm2.yml
---
- name: sfm2 setup
  hosts: all
  tasks:
    - name: check mandatory variables are defined
      assert:
        that:
          - user is defined


    # assume repository exists in ~/sfm2
    - name: get sfm2 dir stats
      stat:
        path: "/home/{{ user }}/prodsec/sfm2"
      register: sfm2_dir
    - name: setup sfm2
      block:
        - name: install python deps
          dnf:
            name:
              - python3
              - python3-pip
              - python3-devel
              - python3-tox
            state: present

        - name: get venv stats
          stat:
            path: "/home/{{ user }}/prodsec/sfm2/venv"
          register: venv_dir
        - name: setup venv
          block:
            - name: create venv
              shell: "python3 -m venv /home/{{ user }}/prodsec/sfm2/venv"
            - name: install pip requirements
              shell: "source /home/{{ user }}/prodsec/sfm2/venv/bin/activate; pip install -r /home/{{ user }}/prodsec/sfm2/requirements.txt -r /home/{{ user }}/prodsec/sfm2/devel-requirements.txt --no-binary psycopg2"
            - name: install cli pip requirements
              shell: "source /home/{{ user }}/prodsec/sfm2/venv/bin/activate; pip install -r /home/{{ user }}/prodsec/sfm2/cli/requirements.txt -r /home/{{ user }}/prodsec/sfm2/cli/devel-requirements.txt"
            - name: install ipython to enhance sfm2 shell
              shell: "source /home/{{ user }}/prodsec/sfm2/venv/bin/activate; pip install ipython"
            - name: install sfm2 app
              shell: "source /home/{{ user }}/prodsec/sfm2/venv/bin/activate; pip install -e /home/{{ user }}/prodsec/sfm2 -e /home/{{ user }}/prodsec/sfm2/cli"
          become_user: "{{ user }}"
          when: venv_dir.stat.exists == false
          rescue:
            - name: VPN connection hint
              debug:
                msg: "failure - check VPN connection"

        - name: create sfm2 log directory
          file:
            path: "/home/{{ user }}/log/sfm2"
            state: directory
          become_user: "{{ user }}"

        - name: setup sfm2 instance environments
          block:
            - name: create instance directories
              file:
                path: "{{ item }}"
                state: directory
              loop:
                - "/home/{{ user }}/prodsec/sfm2/instance-prod"
                - "/home/{{ user }}/prodsec/sfm2/instance-prod/logs"
                - "/home/{{ user }}/prodsec/sfm2/instance-stage"
                - "/home/{{ user }}/prodsec/sfm2/instance-stage/logs"
            - name: setup production config symlink
              file:
                src: "/home/{{ user }}/data/config/sfm2-server-instance-prod-development.ini"
                dest: "/home/{{ user }}/prodsec/sfm2/instance-prod/development.ini"
                state: link
            - name: setup stage config symlink
              file:
                src: "/home/{{ user }}/data/config/sfm2-server-instance-stage-development.ini"
                dest: "/home/{{ user }}/prodsec/sfm2/instance-stage/development.ini"
                state: link
          become_user: "{{ user }}"

        - name: setup aliases
          blockinfile:
            path: "/home/{{ user }}/.bashrc"
            marker: "# {mark} SFM2 ANSIBLE MANAGED BLOCK"
            block: |
              export SFM2_SERVER_CONFIG=~/prodsec/sfm2/instance/development.ini
              alias sfm2-db="sqlitebrowser ~/prodsec/sfm2/instance/sfm2-database.sqlite"
              alias sfm2-db-clear="rm ~/prodsec/sfm2/instance/sfm2-database.sqlite"
              alias sfm2-shell="(sfm2-source && python ~/prodsec/sfm2/sfm2/shell.py)"
              alias sfm2-source="source ~/prodsec/sfm2/venv/bin/activate ; source ~/prodsec/sfm2/cli/sfm2-completion.bash"
              alias sfm2-activate="~/data/tools/sfm2-activate.sh"
              alias sfm2-deactivate="~/data/tools/sfm2-deactivate.sh"
              alias sfm2-instance-switch="~/data/tools/sfm2-instance-switch.sh"
              alias sfm2-server="(sfm2-source && sfm-server --log-level=debug)"
              alias sfm2-taskd="(sfm2-source && sfm-taskd --debug)"
              alias sfm2-log-server="(less +F ~/prodsec/sfm2/instance/logs/sfm2-server.log)"
              alias sfm2-log-taskd="(less +F ~/prodsec/sfm2/instance/logs/sfm2-taskd.log)"
              alias sfm2-log-gunicorn="(less +F ~/prodsec/sfm2/instance/logs/gunicorn-error.log)"

      when: sfm2_dir.stat.exists == true
    - name: report non-existing repo
      fail:
        msg: "sfm2 repo does not exist"
      when: sfm2_dir.stat.exists == false
